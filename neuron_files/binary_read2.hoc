
objref conn_file
objref data_vec
strdef fn_base	
strdef pyr_pyr_conn_fn
sprint(fn_base, "%s", "111128_np25_seed3_rnd_wauto4.0e-03_norm0/conn_list_pyr_pyr_")
n_oc_oc_conn_files = 1
for (i = 0; i < n_oc_oc_conn_files; i += 1){
	// create the filename where connectivity data is stored
	sprint(pyr_pyr_conn_fn, "%s%d.dat", fn_base, i)
	conn_file = new File(pyr_pyr_conn_fn)
	conn_file.ropen()
	data_vec = new Vector(1) // 1 element
	cnt = 0
	if (conn_file.eof() != 1) { // if the file is not empty
		print "Connecting cells via file: ", pyr_pyr_conn_fn
		while (conn_file.eof() != 1){ // while the file is not empty read the data
			conn_file.vread(1, &data_vec.x[cnt])
			data_vec.append(0)
			cnt += 1
		}
		data_vec.remove(cnt) // remove the last 0 element
		n_row = data_vec.size() / 3
		n_col = 3
		n_data = int(n_row * n_col)
		// process the data
		for (j = 0; j < n_row; j += 1) {
			src_gid = data_vec.x[j]
			tgt_gid = data_vec.x[n_row + j]
			weight = data_vec.x[2*n_row + j]
			printf("%d\t%d\t%.8e\n", src_gid, tgt_gid, weight)
/*            printf("DEBUG, connect_two_cells %d -> %d: %f\n", src_gid, tgt_gid, weight)*/
/*            connect_two_cells(src_gid, tgt_gid, weight)*/
		}
	}
}
